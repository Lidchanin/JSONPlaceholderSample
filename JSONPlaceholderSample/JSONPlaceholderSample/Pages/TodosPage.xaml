<?xml version="1.0" encoding="utf-8" ?>
<pages:BasePage xmlns="http://xamarin.com/schemas/2014/forms"
                xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                xmlns:converters="clr-namespace:JSONPlaceholderSample.Converters;assembly=JSONPlaceholderSample"
                xmlns:controls="clr-namespace:JSONPlaceholderSample.Controls;assembly=JSONPlaceholderSample"
                xmlns:helpers="clr-namespace:JSONPlaceholderSample.Helpers;assembly=JSONPlaceholderSample"
                xmlns:pages="clr-namespace:JSONPlaceholderSample.Pages;assembly=JSONPlaceholderSample"
                xmlns:tinted="clr-namespace:Plugin.CrossPlatformTintedImage.Abstractions;assembly=Plugin.CrossPlatformTintedImage.Abstractions"
                x:Class="JSONPlaceholderSample.Pages.TodosPage"
                Title="{Binding PageTitle}">

    <pages:BasePage.Resources>
        <ResourceDictionary>
            <Style x:Key="CurrentGridStyle" TargetType="Grid">
                <Setter Property="ColumnSpacing" Value="0"/>
                <Setter Property="RowSpacing" Value="0"/>
            </Style>

            <Style x:Key="CurrentAddButtonStyle" TargetType="tinted:TintedImage">
                <Setter Property="Source" Value="{x:Static helpers:ConstantHelper.PlusCircleIcon}"/>
                <Setter Property="IsEnabled" Value="{Binding IsChangeEnabled}"/>
                <Setter Property="TintColor" Value="{StaticResource DarkColor}"/>
                <Setter Property="MinimumHeightRequest" Value="20"/>
                <Setter Property="MinimumWidthRequest" Value="20"/>
            </Style>

            <Style x:Key="CurrentCheckedIconStyle" TargetType="tinted:TintedImage">
                <Setter Property="Source" Value="{x:Static helpers:ConstantHelper.CheckedIcon}"/>
                <Setter Property="MinimumHeightRequest" Value="20"/>
                <Setter Property="MinimumWidthRequest" Value="20"/>
            </Style>

            <DataTemplate x:Key="CurrentListItemTemplate">
                <ViewCell>
                    <FlexLayout Direction="Row"
                                AlignContent="Center"
                                Padding="2">
                        <Label Text="{Binding Title}"
                               Style="{StaticResource DarkSmallWrapLabelStyle}"
                               VerticalTextAlignment="Center"
                               Margin="0,0,2,0"
                               FlexLayout.Basis="95%"/>

                        <tinted:TintedImage Style="{StaticResource CurrentCheckedIconStyle}" 
                                            TintColor="{StaticResource DarkColor}"
                                            FlexLayout.Basis="5%"/>
                    </FlexLayout>
                </ViewCell>
            </DataTemplate>

            <DataTemplate x:Key="CurrentListItemTemplateWithActions">
                <ViewCell>
                    <ViewCell.ContextActions>
                        <MenuItem IsDestructive="True" 
                                  Text="Delete"
                                  Clicked="MenuDelete_OnClicked"/>
                    </ViewCell.ContextActions>

                    <FlexLayout Direction="Row"
                                AlignContent="Center"
                                Padding="2">
                        <Label Text="{Binding Title}"
                               Style="{StaticResource DarkSmallWrapLabelStyle}"
                               VerticalTextAlignment="Center"
                               Margin="0,0,2,0"
                               FlexLayout.Basis="95%"/>

                        <tinted:TintedImage Style="{StaticResource CurrentCheckedIconStyle}"
                                            TintColor="{StaticResource BlurDarkColor}"
                                            FlexLayout.Basis="5%"/>
                    </FlexLayout>
                </ViewCell>
            </DataTemplate>

            <Style x:Key="CurrentListViewStyle" TargetType="ListView">
                <Setter Property="HasUnevenRows" Value="True"/>
                <Setter Property="SeparatorVisibility" Value="None"/>
            </Style>
        </ResourceDictionary>
    </pages:BasePage.Resources>

    <pages:BasePage.Content>
        <Grid Style="{StaticResource CurrentGridStyle}"
              BackgroundColor="{StaticResource LightColor}">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>

            <!--#region Unfinished todos-->
            <controls:ViewWithTitle Grid.Row="0">
                <controls:ViewWithTitle.ChildView>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <ListView x:Name="UnfinishedTodosListView" 
                                  ItemsSource="{Binding UnfinishedTodos}" 
                                  ItemTemplate="{StaticResource CurrentListItemTemplateWithActions}"
                                  ItemSelected="Todo_OnItemSelected"
                                  Style="{StaticResource CurrentListViewStyle}">
                            <ListView.Footer>
                                <FlexLayout Direction="Row"
                                            AlignContent="Center">
                                    <Entry Text="{Binding NewTodoText}" 
                                           Style="{StaticResource DarkSmallEntryStyle}"
                                           Margin="0,0,2,0"
                                           FlexLayout.Basis="95%"/>

                                    <tinted:TintedImage Style="{StaticResource CurrentAddButtonStyle}"
                                                        FlexLayout.Basis="5%">
                                        <tinted:TintedImage.GestureRecognizers>
                                            <TapGestureRecognizer Tapped="AddButton_OnTapped"
                                                                  NumberOfTapsRequired="1"/>
                                        </tinted:TintedImage.GestureRecognizers>
                                    </tinted:TintedImage>
                                </FlexLayout>
                            </ListView.Footer>
                            <ListView.Triggers>
                                <DataTrigger TargetType="ListView"
                                             Binding="{Binding UnfinishedTodos.Count}" Value="0">
                                    <Setter Property="ListView.IsVisible" Value="False"/>
                                </DataTrigger>
                            </ListView.Triggers>
                        </ListView>

                        <!--#region Empty state-->
                        <StackLayout Orientation="Vertical"
                                     IsVisible="{Binding Source={x:Reference UnfinishedTodosListView}, Path=IsVisible, 
                                                         Converter={converters:ReverseBooleanConverter}}"
                                     VerticalOptions="Center">

                            <tinted:TintedImage Source="{x:Static helpers:ConstantHelper.EmptyStateImage}"
                                                TintColor="{StaticResource DarkColor}"/>

                            <Label Text="{x:Static helpers:ConstantHelper.NoUnfinishedTodos}"
                                   Style="{StaticResource DarkMediumWrapLabelStyle}"
                                   HorizontalTextAlignment="Center"/>

                            <FlexLayout Direction="Row">
                                <Entry Text="{Binding NewTodoText}"
                                       Placeholder="{x:Static helpers:ConstantHelper.CreateTodo}"
                                       Style="{StaticResource DarkSmallEntryStyle}"
                                       Margin="0,0,2,0"
                                       FlexLayout.Basis="95%"/>

                                <tinted:TintedImage Style="{StaticResource CurrentAddButtonStyle}"
                                                    FlexLayout.Basis="5%">
                                    <tinted:TintedImage.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="AddButton_OnTapped"
                                                              NumberOfTapsRequired="1"/>
                                    </tinted:TintedImage.GestureRecognizers>
                                </tinted:TintedImage>
                            </FlexLayout>
                        </StackLayout>
                        <!--#endregion-->
                    </Grid>
                </controls:ViewWithTitle.ChildView>
            </controls:ViewWithTitle>
            <!--#endregion-->

            <!--#region Completed todos-->
            <controls:ViewWithTitle Title="{x:Static helpers:ConstantHelper.CompletedTodos}"
                                    Grid.Row="1">
                <controls:ViewWithTitle.ChildView>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <ListView x:Name="CompletedTodosListView" 
                                  ItemsSource="{Binding CompletedTodos}" 
                                  ItemTemplate="{StaticResource CurrentListItemTemplate}"
                                  ItemSelected="Todo_OnItemSelected"
                                  Style="{StaticResource CurrentListViewStyle}">
                            <ListView.Triggers>
                                <DataTrigger TargetType="ListView"
                                             Binding="{Binding CompletedTodos.Count}" Value="0">
                                    <Setter Property="ListView.IsVisible" Value="False"/>
                                </DataTrigger>
                            </ListView.Triggers>
                        </ListView>

                        <!--#region Empty state-->
                        <FlexLayout Direction="Column"
                                    JustifyContent="Center"
                                    AlignItems="Center"
                                    IsVisible="{Binding Source={x:Reference CompletedTodosListView}, Path=IsVisible, 
                                                        Converter={converters:ReverseBooleanConverter}}">
                            <tinted:TintedImage Source="{x:Static helpers:ConstantHelper.EmptyStateImage}"
                                                TintColor="{StaticResource DarkColor}"/>

                            <Label Text="{x:Static helpers:ConstantHelper.NoUnfinishedTodos}"
                                   Style="{StaticResource DarkMediumWrapLabelStyle}"
                                   HorizontalTextAlignment="Center"/>
                        </FlexLayout>
                        <!--#endregion-->
                    </Grid>
                </controls:ViewWithTitle.ChildView>
            </controls:ViewWithTitle>
            <!--#endregion-->
        </Grid>
    </pages:BasePage.Content>
</pages:BasePage>